{"ast":null,"code":"var _jsxFileName = \"/home/alana/Faculdade/floripatec/FuturoDev/Modulo1/modulo-1-semana-11/src/pages/Javascript/Json/index.jsx\";\nimport PostHeader from \"../../../components/PostHeader\";\nimport SimpleCard from \"../../../components/SimpleCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Json() {\n  const planets = fetch(\"/data/planets.json\").then(res => res.json());\n  function showFileContent() {\n    planets.then(res => console.log(res));\n  }\n  function convertJsToJson() {\n    planets.then(res => JSON.stringify(res)).then(res => console.log(res));\n  }\n  function convertJsonToJs() {\n    const jsonExample = '{ \"name\": \"John\", \"age\": 22 }';\n    console.log(JSON.parse(jsonExample));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n      title: \"JSON\",\n      description: \"\\xC9 um formato de arquivo utilizado para trocar informa\\xE7\\xF5es leg\\xEDveis por ser humanos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Anota\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"JSON \\xE9 a sigla para JavaScript Object Notation.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Antes do JSON era utilizado XML (Extensive Markup Language) para trocar informa\\xE7\\xF5es entre servidores, por\\xE9m, o JSON ganhou maior popularidade por possuir uma sintaxe mais limpa e ser mais leve em rela\\xE7\\xE3o ao seu antecessor.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"O arquivo \\xE9 composto por texto e utiliza a extens\\xE3o \\\".json\\\".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Diferen\\xE7as entre a sintaxe JSON e Objetos Javascript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Aspas duplas:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 9\n              }, this), \" diferente dos objetos JS, chaves de objetos precisam estar envoltas por aspas duplas em um arquivo JSON.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Fun\\xE7\\xF5es:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 9\n              }, this), \" arquivos JSON n\\xE3o podem conter fun\\xE7\\xF5es, enquanto os objetos JavaScript podem.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Outras linguagens de programa\\xE7\\xE3o:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 9\n              }, this), \" os objetos Javascript pertencem unicamente a linguagem JS, por\\xE9m o formato JSON pode ser usado por in\\xFAmeras outras linguagens.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Demonstra\\xE7\\xF5es pr\\xE1ticas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Carregando um arquivo JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-1\",\n            children: \"\\xC9 poss\\xEDvel ler e utilizar os dados de um arquivo JSON incluso no seu projeto usando a importa\\xE7\\xE3o de arquivos comuns do JS acrescido pelo assert indicando o type como json, conforme o exemplo abaixo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"mb-1\",\n            children: [\"import planets from \\\"../../data/planets.json\\\"\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"assert \", \"{ type: 'json' }\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 8\n            }, this), \";\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-1\",\n            children: [\"Para essa importa\\xE7\\xE3o funcionar no seu arquivo JavaScript ele precisa estar sendo importado no HTML usando o atributo\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"mb-1\",\n              children: \"type=\\\"module\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 8\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: \"Ao clicar no bot\\xE3o ser\\xE1 imprimido no console o conte\\xFAdo do arquivo carregado \\\"planets.json\\\", que usando o assert j\\xE1 foi convertido para objeto Javascript. O arquivo em quest\\xE3o cont\\xE9m uma listagem de planetas da franquia Star Wars.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => showFileContent(),\n            children: \"Mostrar conte\\xFAdo do arquivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Convertendo um Objeto Javascript para JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: \"Ao clicar no bot\\xE3o abaixo o conte\\xFAdo do arquivo mostrado no console no exemplo anterior ser\\xE1 convertido para JSON e o resultado ser\\xE1 exibido no console.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => convertJsToJson(),\n            children: \"Converter para JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Convertendo um JSON para Objeto Javascript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: \"Ao clicar no bot\\xE3o abaixo um objeto escrito em JSON ser\\xE1 comvertido para Javascript e o resultado ser\\xE1 exibido no console.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => convertJsonToJs(),\n            children: \"Converter para JS Object\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n_c = Json;\nexport default Json;\nvar _c;\n$RefreshReg$(_c, \"Json\");","map":{"version":3,"names":["PostHeader","SimpleCard","jsxDEV","_jsxDEV","Json","planets","fetch","then","res","json","showFileContent","console","log","convertJsToJson","JSON","stringify","convertJsonToJs","jsonExample","parse","children","title","description","fileName","_jsxFileName","lineNumber","columnNumber","id","className","onClick","_c","$RefreshReg$"],"sources":["/home/alana/Faculdade/floripatec/FuturoDev/Modulo1/modulo-1-semana-11/src/pages/Javascript/Json/index.jsx"],"sourcesContent":["import PostHeader from \"../../../components/PostHeader\";\nimport SimpleCard from \"../../../components/SimpleCard\";\n\nfunction Json() {\n const planets = fetch(\"/data/planets.json\").then((res) => res.json());\n\n function showFileContent() {\n  planets.then((res) => console.log(res));\n }\n\n function convertJsToJson() {\n  planets.then((res) => JSON.stringify(res)).then((res) => console.log(res));\n }\n\n function convertJsonToJs() {\n  const jsonExample = '{ \"name\": \"John\", \"age\": 22 }';\n  console.log(JSON.parse(jsonExample));\n }\n\n return (\n  <div>\n   <PostHeader\n    title=\"JSON\"\n    description=\"É um formato de arquivo utilizado para trocar informações legíveis por\n    ser humanos.\"\n   />\n\n   <div id=\"page-content\">\n    <div>\n     <h2 className=\"section-title\">Anotações</h2>\n\n     <SimpleCard>\n      <ul>\n       <li>JSON é a sigla para JavaScript Object Notation.</li>\n       <li>\n        Antes do JSON era utilizado XML (Extensive Markup Language) para trocar\n        informações entre servidores, porém, o JSON ganhou maior popularidade\n        por possuir uma sintaxe mais limpa e ser mais leve em relação ao seu\n        antecessor.\n       </li>\n       <li>\n        O arquivo é composto por texto e utiliza a extensão &quot;.json&quot;.\n       </li>\n      </ul>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">\n       Diferenças entre a sintaxe JSON e Objetos Javascript\n      </h2>\n      <ul>\n       <li>\n        <b>Aspas duplas:</b> diferente dos objetos JS, chaves de objetos\n        precisam estar envoltas por aspas duplas em um arquivo JSON.\n       </li>\n       <li>\n        <b>Funções:</b> arquivos JSON não podem conter funções, enquanto os\n        objetos JavaScript podem.\n       </li>\n       <li>\n        <b>Outras linguagens de programação:</b> os objetos Javascript pertencem\n        unicamente a linguagem JS, porém o formato JSON pode ser usado por\n        inúmeras outras linguagens.\n       </li>\n      </ul>\n     </SimpleCard>\n    </div>\n    <div>\n     <h2 className=\"section-title\">Demonstrações práticas</h2>\n\n     <SimpleCard>\n      <h2 className=\"title\">Carregando um arquivo JSON</h2>\n      <span className=\"mb-1\">\n       É possível ler e utilizar os dados de um arquivo JSON incluso no seu\n       projeto usando a importação de arquivos comuns do JS acrescido pelo\n       assert indicando o type como json, conforme o exemplo abaixo:\n      </span>\n\n      <code className=\"mb-1\">\n       import planets from &quot;../../data/planets.json&quot;\n       <b>assert {\"{ type: 'json' }\"}</b>;\n      </code>\n\n      <span className=\"mb-1\">\n       Para essa importação funcionar no seu arquivo JavaScript ele precisa\n       estar sendo importado no HTML usando o atributo{\" \"}\n       <code className=\"mb-1\">type=&quot;module&quot;</code>.\n      </span>\n\n      <p className=\"mb-1\">\n       Ao clicar no botão será imprimido no console o conteúdo do arquivo\n       carregado &quot;planets.json&quot;, que usando o assert já foi convertido\n       para objeto Javascript. O arquivo em questão contém uma listagem de\n       planetas da franquia Star Wars.\n      </p>\n      <button onClick={() => showFileContent()}>\n       Mostrar conteúdo do arquivo\n      </button>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">\n       Convertendo um Objeto Javascript para JSON\n      </h2>\n      <p className=\"mb-1\">\n       Ao clicar no botão abaixo o conteúdo do arquivo mostrado no console no\n       exemplo anterior será convertido para JSON e o resultado será exibido no\n       console.\n      </p>\n      <button onClick={() => convertJsToJson()}>Converter para JSON</button>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">\n       Convertendo um JSON para Objeto Javascript\n      </h2>\n      <p className=\"mb-1\">\n       Ao clicar no botão abaixo um objeto escrito em JSON será comvertido para\n       Javascript e o resultado será exibido no console.\n      </p>\n      <button onClick={() => convertJsonToJs()}>\n       Converter para JS Object\n      </button>\n     </SimpleCard>\n    </div>\n   </div>\n  </div>\n );\n}\n\nexport default Json;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}