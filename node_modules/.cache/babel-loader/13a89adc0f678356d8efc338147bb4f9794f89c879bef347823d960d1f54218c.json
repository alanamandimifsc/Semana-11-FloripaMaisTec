{"ast":null,"code":"var _jsxFileName = \"/home/alana/Faculdade/floripatec/FuturoDev/Modulo1/modulo-1-semana-11/src/pages/React/Hooks/index.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport PostHeader from \"../../../components/PostHeader\";\nimport SimpleCard from \"../../../components/SimpleCard\";\nimport TipText from \"../../../components/TipText\";\nimport useFetch from \"../../../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hooks() {\n  _s();\n  const [randomPass, setRandomPass] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [secondsInThePage, setSecondsInThePage] = useState(0);\n  const [incorrectSum, setIncorrectSum] = useState(0);\n  const [correctSum, setCorrectSum] = useState(0);\n  const [users, loading] = useFetch(\"https://jsonplaceholder.typicode.com/users\");\n  function handleSumIncorrect() {\n    setIncorrectSum(incorrectSum + 1);\n    setIncorrectSum(incorrectSum + 1);\n    setIncorrectSum(incorrectSum + 1);\n  }\n  function handleSumCorrect() {\n    setCorrectSum(sum => sum + 1);\n    setCorrectSum(sum => sum + 1);\n    setCorrectSum(sum => sum + 1);\n  }\n  function generatePassword(length) {\n    const charset = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let pass = \"\";\n    for (let i = 0; i < length; i++) {\n      pass += charset.charAt(Math.floor(Math.random() * charset.length));\n    }\n    setRandomPass(pass);\n  }\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSecondsInThePage(secondsInThePage + 1);\n    }, 1000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [secondsInThePage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n      title: \"Hooks\",\n      description: \"Fun\\xE7\\xF5es que permitem que o componente tenha acesso a estados, ciclo de vida e outros recursos do React de maneira simplificada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Built-in React Hooks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Built-in (Tradu\\xE7\\xE3o: Integrados) React Hooks \\xE9 como s\\xE3o chamados os Hooks disponibilizados pela equipe do React ou seja, est\\xE3o integrados a lib do React.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Hooks de estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"caption\",\n            children: \"O que \\xE9 estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-2\",\n            children: \"A grosso modo, os estados s\\xE3o a mem\\xF3ria do componente. Utilizamos estados para definir as informa\\xE7\\xF5es exibidas ao usu\\xE1rio que precisam ser atualizadas na tela assim que forem atualizadas na mem\\xF3ria do navegador (no c\\xF3digo).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"caption\",\n            children: \"Pra que servem os Hooks de estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-2\",\n            children: \"Os hooks de estado permitem que voc\\xEA gerencie os estados de um componente. Ou seja, s\\xE3o eles que voc\\xEA usa para que um componente \\u201Clembre\\u201D informa\\xE7\\xF5es. Por exemplo, um componente de contador pode usar um estado para armazenar o valor atual do contador, sendo assim sempre que o valor do contador for alterado (pra adicionar +1, por exemplo) a altera\\xE7\\xE3o ser\\xE1 exibida na tela.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"useState\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 8\n            }, this), \" declara uma vari\\xE1vel de estado que voc\\xEA pode atualizar diretamente.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"mb-2\",\n            children: \"const [index, setIndex] = useState(0)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Hooks de efeito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-2\",\n            children: \"Permitem lidar de maneira simples com efeitos colaterais durante o ciclo de vida do componente;\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"mb-2\",\n            children: \"useEffect(callback, depend\\xEAncias);\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"caption\",\n            children: \"Par\\xE2metros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"callback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 9\n              }, this), \": fun\\xE7\\xE3o a ser executada quando o valor de uma depend\\xEAncia for alterado\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"depend\\xEAncias\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 9\n              }, this), \": um array de valores a ser observado, se o array for vazio o useEffect ser\\xE1 executado na primeira renderiza\\xE7\\xE3o do componente, j\\xE1 se voc\\xEA n\\xE3o passar esse propriedade o useEffect ser\\xE1 executado a cada renderiza\\xE7\\xE3o do componente.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Hooks de refer\\xEAncia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"caption\",\n            children: \"Pra que servem os Hooks de refer\\xEAncia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-2\",\n            children: \"Os hooks de refer\\xEAncia permitem que um componente retenha algumas informa\\xE7\\xF5es que n\\xE3o s\\xE3o usadas para renderiza\\xE7\\xE3o, como um elemento do HTML ou um ID de tempo limite. Ao contr\\xE1rio do estado, atualizar uma refer\\xEAncia n\\xE3o renderiza novamente seu componente. Refs s\\xE3o uma \\\"sa\\xEDda de fuga\\\" do paradigma React.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"useRef\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 8\n            }, this), \" declara uma ref. Voc\\xEA pode armazenar qualquer valor nele, mas na maioria das vezes \\xE9 usado para armazenar um elemento do HTML.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Para criar a refer\\xEAncia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"mb-2\",\n            children: \"const inputRef = useRef(null);\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Para usar a refer\\xEAncia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"mb-2\",\n            children: \"<input type=\\\"text\\\" ref={inputRef} />\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Outros Hooks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Hooks de contexto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 9\n              }, this), \": Para lidar com informa\\xE7\\xF5es de outros componentes.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Hooks de desempenho\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 9\n              }, this), \": Para evitar que a aplica\\xE7\\xE3o realize trabalhos desnecess\\xE1rios.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Hooks customizados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Conceito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-1\",\n            children: \"O React possui diversos hooks pr\\xF3prios que j\\xE1 conhecemos, mas se voc\\xEA precisar de Hook espec\\xEDfico \\xE9 poss\\xEDvel criar. Por exemplo, para buscar dados, para verificar se o usu\\xE1rio est\\xE1 online, para persistir dados no localStorage ou quaisquer outras necessidades espec\\xEDficas da sua aplica\\xE7\\xE3o.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Caracter\\xEDsticas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"S\\xE3o utilizados para abstrair l\\xF3gicas usadas por v\\xE1rios componentes.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Devem utilizar a conven\\xE7\\xE3o recomendada pelo React, sendo esta: ser nomeados come\\xE7ando com use seguido por uma letra mai\\xFAscula. (exemplo: useFetch)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Para organizar corretamente, o ideal \\xE9 que sejam alocados em uma pasta denominada hooks e que cada hook customizado esteja em um arquivo com o mesmo nome dado ao hook, como no exemplo anterior\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"/hooks/useFetch.js\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 9\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Todos os Hooks s\\xE3o executados novamente sempre que seu componente \\xE9 renderizado novamente.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Demonstra\\xE7\\xF5es pr\\xE1ticas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Criando um gerador de valores aleat\\xF3rios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: \"O bot\\xE3o abaixo vai gerar uma senha aleat\\xF3ria sempre que voc\\xEA clicar nele. Perceba que o componente influenciado pelo valor do estado \\xE9 atualizado sempre que o valor muda.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mb-1\",\n            onClick: () => generatePassword(8),\n            children: \"Gerar senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"caption\",\n            children: [\"Senha gerada: \", randomPass]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Criando Hooks com card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: \"O bot\\xE3o abaixo vai gerar uma card sempre que voc\\xEA clicar nele. Perceba que o componente influenciado pelo valor do estado \\xE9 atualizado sempre que o card muda.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mb-1\",\n            onClick: () => setCards([...cards, cards.lenght + 1]),\n            children: \"Adicionar novo card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 7\n          }, this), cards.map(card => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"caption\",\n            children: \"card\"\n          }, card, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Atualizando estados com base no valor anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TipText, {\n            text: \"Para simular um ambiente onde o estado \\xE9 atualizado mais de uma vez em um curto per\\xEDodo de tempo, ambas as somas s\\xE3o realizadas como intru\\xE7\\xF5es de +1 por 3 vezes consecutivas.\",\n            margin: \"0 0 1rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: \"O Hook useState funciona \\u201Ccomo uma promise\\u201D, logo em algumas situa\\xE7\\xF5es quando referenciamos o valor atual do estado para adicionar +1 podem haver confus\\xF5es. Como no bot\\xE3o abaixo, que deveria somar 3 no valor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"mb-2\",\n            children: [\"setIncorrectSum(incorrectSum + 1); \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 43\n            }, this), \"setIncorrectSum(incorrectSum + 1); \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 43\n            }, this), \"setIncorrectSum(incorrectSum + 1);\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mb-2\",\n            onClick: () => handleSumIncorrect(),\n            children: \"Somar 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"caption\",\n            children: [\"Resultado da soma: \", incorrectSum]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: \"Isso ocorre porque ele n\\xE3o est\\xE1 se baseando corretamente no estado anterior. Nesse caso em espec\\xEDfico o setState anterior ainda est\\xE1 em execu\\xE7\\xE3o e ele n\\xE3o executar\\xE1 os dois pr\\xF3ximos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: \"Por situa\\xE7\\xF5es como a de cima, o indicado sempre que se altera um estado baseado no valor anterior \\xE9 usar o padr\\xE3o de \\\"atualizador\\\" do useState, conforme o bot\\xE3o abaixo, que somar\\xE1 corretamente:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"mb-2\",\n            children: [\"setCorrectSum((sum) =\", \">\", \" sum + 1); \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 45\n            }, this), \"setCorrectSum((sum) =\", \">\", \" sum + 1); \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 45\n            }, this), \"setCorrectSum((sum) =\", \">\", \" sum + 1);\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mb-2\",\n            onClick: () => handleSumCorrect(),\n            children: \"Somar 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"caption\",\n            children: [\"Resultado da soma: \", correctSum]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"useEffect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [\"Gra\\xE7as ao useEffect, assim que voc\\xEA entrou na p\\xE1gina o contador abaixo foi iniciado e indica que voc\\xEA permaneceu nessa p\\xE1gina por\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: secondsInThePage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 8\n            }, this), \" segundos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"second-title\",\n            children: \"Hook customizados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: \"Lista de usu\\xE1rios carregada da API JSON Placeholder assim que voc\\xEA entrou nesta p\\xE1gina usando um hook customizado criado para abstrair a l\\xF3gica de busca de dados.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 7\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Carregando usu\\xE1rios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this), !loading && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.name\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n_s(Hooks, \"fkL2wMy16j0vW2plH/utDHv71OU=\", false, function () {\n  return [useFetch];\n});\n_c = Hooks;\nexport default Hooks;\nvar _c;\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["useEffect","useState","PostHeader","SimpleCard","TipText","useFetch","jsxDEV","_jsxDEV","Hooks","_s","randomPass","setRandomPass","cards","setCards","secondsInThePage","setSecondsInThePage","incorrectSum","setIncorrectSum","correctSum","setCorrectSum","users","loading","handleSumIncorrect","handleSumCorrect","sum","generatePassword","length","charset","pass","i","charAt","Math","floor","random","timeout","setTimeout","clearTimeout","children","title","description","fileName","_jsxFileName","lineNumber","columnNumber","id","className","onClick","lenght","map","card","text","margin","user","name","_c","$RefreshReg$"],"sources":["/home/alana/Faculdade/floripatec/FuturoDev/Modulo1/modulo-1-semana-11/src/pages/React/Hooks/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport PostHeader from \"../../../components/PostHeader\";\nimport SimpleCard from \"../../../components/SimpleCard\";\nimport TipText from \"../../../components/TipText\";\nimport useFetch from \"../../../hooks/useFetch\";\n\nfunction Hooks() {\n const [randomPass, setRandomPass] = useState(null);\n const [cards, setCards] = useState([]);\n const [secondsInThePage, setSecondsInThePage] = useState(0);\n const [incorrectSum, setIncorrectSum] = useState(0);\n const [correctSum, setCorrectSum] = useState(0);\n\n const [users, loading] = useFetch(\"https://jsonplaceholder.typicode.com/users\");\n\n function handleSumIncorrect() {\n  setIncorrectSum(incorrectSum + 1);\n  setIncorrectSum(incorrectSum + 1);\n  setIncorrectSum(incorrectSum + 1);\n }\n\n function handleSumCorrect() {\n  setCorrectSum((sum) => sum + 1);\n  setCorrectSum((sum) => sum + 1);\n  setCorrectSum((sum) => sum + 1);\n }\n\n function generatePassword(length) {\n  const charset =\n   \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let pass = \"\";\n\n  for (let i = 0; i < length; i++) {\n   pass += charset.charAt(Math.floor(Math.random() * charset.length));\n  }\n\n  setRandomPass(pass);\n }\n\n useEffect(() => {\n  const timeout = setTimeout(() => {\n   setSecondsInThePage(secondsInThePage + 1);\n  }, 1000);\n\n  return () => {\n   clearTimeout(timeout);\n  };\n }, [secondsInThePage]);\n\n return (\n  <div>\n   <PostHeader\n    title=\"Hooks\"\n    description=\"Funções que permitem que o componente tenha acesso a estados, ciclo de vida e outros recursos do React de maneira simplificada\"\n   />\n\n   <div id=\"page-content\">\n    <div>\n     <h2 className=\"section-title\">Built-in React Hooks</h2>\n\n     <SimpleCard>\n      <span>\n       Built-in (Tradução: Integrados) React Hooks é como são chamados os Hooks\n       disponibilizados pela equipe do React ou seja, estão integrados a lib do\n       React.\n      </span>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Hooks de estado</h2>\n\n      <h2 className=\"caption\">O que é estado</h2>\n      <span className=\"mb-2\">\n       A grosso modo, os estados são a memória do componente. Utilizamos estados\n       para definir as informações exibidas ao usuário que precisam ser\n       atualizadas na tela assim que forem atualizadas na memória do navegador\n       (no código).\n      </span>\n\n      <h2 className=\"caption\">Pra que servem os Hooks de estado</h2>\n      <span className=\"mb-2\">\n       Os hooks de estado permitem que você gerencie os estados de um\n       componente. Ou seja, são eles que você usa para que um componente\n       “lembre” informações. Por exemplo, um componente de contador pode usar um\n       estado para armazenar o valor atual do contador, sendo assim sempre que o\n       valor do contador for alterado (pra adicionar +1, por exemplo) a\n       alteração será exibida na tela.\n      </span>\n\n      <span>\n       <b>useState</b> declara uma variável de estado que você pode atualizar\n       diretamente.\n      </span>\n      <code className=\"mb-2\">const [index, setIndex] = useState(0)</code>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Hooks de efeito</h2>\n\n      <span className=\"mb-2\">\n       Permitem lidar de maneira simples com efeitos colaterais durante o ciclo\n       de vida do componente;\n      </span>\n\n      <code className=\"mb-2\">useEffect(callback, dependências);</code>\n\n      <h2 className=\"caption\">Parâmetros</h2>\n      <ul>\n       <li>\n        <b>callback</b>: função a ser executada quando o valor de uma\n        dependência for alterado\n       </li>\n       <li>\n        <b>dependências</b>: um array de valores a ser observado, se o array for\n        vazio o useEffect será executado na primeira renderização do componente,\n        já se você não passar esse propriedade o useEffect será executado a cada\n        renderização do componente.\n       </li>\n      </ul>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Hooks de referência</h2>\n\n      <h2 className=\"caption\">Pra que servem os Hooks de referência</h2>\n      <span className=\"mb-2\">\n       Os hooks de referência permitem que um componente retenha algumas\n       informações que não são usadas para renderização, como um elemento do\n       HTML ou um ID de tempo limite. Ao contrário do estado, atualizar uma\n       referência não renderiza novamente seu componente. Refs são uma\n       &quot;saída de fuga&quot; do paradigma React.\n      </span>\n\n      <span className=\"mb-2\">\n       <b>useRef</b> declara uma ref. Você pode armazenar qualquer valor nele,\n       mas na maioria das vezes é usado para armazenar um elemento do HTML.\n      </span>\n\n      <p>Para criar a referência:</p>\n      <code className=\"mb-2\">const inputRef = useRef(null);</code>\n\n      <p>Para usar a referência:</p>\n      <code className=\"mb-2\">\n       &lt;input type=&quot;text&quot; ref=&#123;inputRef&#125; /&gt;\n      </code>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Outros Hooks</h2>\n\n      <ul>\n       <li>\n        <b>Hooks de contexto</b>: Para lidar com informações de outros\n        componentes.\n       </li>\n       <li>\n        <b>Hooks de desempenho</b>: Para evitar que a aplicação realize\n        trabalhos desnecessários.\n       </li>\n      </ul>\n     </SimpleCard>\n    </div>\n\n    <div>\n     <h2 className=\"section-title\">Hooks customizados</h2>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Conceito</h2>\n      <span className=\"mb-1\">\n       O React possui diversos hooks próprios que já conhecemos, mas se você\n       precisar de Hook específico é possível criar. Por exemplo, para buscar\n       dados, para verificar se o usuário está online, para persistir dados no\n       localStorage ou quaisquer outras necessidades específicas da sua\n       aplicação.\n      </span>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Características</h2>\n\n      <ul>\n       <li>\n        São utilizados para abstrair lógicas usadas por vários componentes.\n       </li>\n       <li>\n        Devem utilizar a convenção recomendada pelo React, sendo esta: ser\n        nomeados começando com use seguido por uma letra maiúscula. (exemplo:\n        useFetch)\n       </li>\n       <li>\n        Para organizar corretamente, o ideal é que sejam alocados em uma pasta\n        denominada hooks e que cada hook customizado esteja em um arquivo com o\n        mesmo nome dado ao hook, como no exemplo anterior{\" \"}\n        <b>/hooks/useFetch.js</b>.\n       </li>\n       <li>\n        Todos os Hooks são executados novamente sempre que seu componente é\n        renderizado novamente.\n       </li>\n      </ul>\n     </SimpleCard>\n    </div>\n\n    <div>\n     <h2 className=\"section-title\">Demonstrações práticas</h2>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Criando um gerador de valores aleatórios</h2>\n      <p className=\"mb-2\">\n       O botão abaixo vai gerar uma senha aleatória sempre que você clicar nele.\n       Perceba que o componente influenciado pelo valor do estado é atualizado\n       sempre que o valor muda.\n      </p>\n\n      <button className=\"mb-1\" onClick={() => generatePassword(8)}>\n       Gerar senha\n      </button>\n\n      <p className=\"caption\">Senha gerada: {randomPass}</p>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Criando Hooks com card</h2>\n      <p className=\"mb-2\">\n       O botão abaixo vai gerar uma card sempre que você clicar nele.\n       Perceba que o componente influenciado pelo valor do estado é atualizado\n       sempre que o card muda.\n      </p>\n\n      <button className=\"mb-1\" onClick={() => setCards([... cards, cards.lenght+1])}>\n       Adicionar novo card\n      </button>\n      {cards.map((card) => (<p className=\"caption\" key={card}>card</p>))}\n\n      \n     </SimpleCard>\n     \n\n\n     <SimpleCard>\n      <h2 className=\"second-title\">\n       Atualizando estados com base no valor anterior\n      </h2>\n\n      <TipText\n       text=\"Para simular um ambiente onde o estado é atualizado mais de uma vez em um\n       curto período de tempo, ambas as somas são realizadas como intruções de\n       +1 por 3 vezes consecutivas.\"\n       margin=\"0 0 1rem\"\n      />\n\n      <p className=\"mb-2\">\n       O Hook useState funciona “como uma promise”, logo em algumas situações\n       quando referenciamos o valor atual do estado para adicionar +1 podem\n       haver confusões. Como no botão abaixo, que deveria somar 3 no valor:\n      </p>\n\n      <code className=\"mb-2\">\n       setIncorrectSum(incorrectSum + 1); <br />\n       setIncorrectSum(incorrectSum + 1); <br />\n       setIncorrectSum(incorrectSum + 1);\n      </code>\n\n      <button className=\"mb-2\" onClick={() => handleSumIncorrect()}>\n       Somar 3\n      </button>\n\n      <h4 className=\"caption\">Resultado da soma: {incorrectSum}</h4>\n\n      <p className=\"mb-2\">\n       Isso ocorre porque ele não está se baseando corretamente no estado\n       anterior. Nesse caso em específico o setState anterior ainda está em\n       execução e ele não executará os dois próximos.\n      </p>\n\n      <p className=\"mb-2\">\n       Por situações como a de cima, o indicado sempre que se altera um estado\n       baseado no valor anterior é usar o padrão de &quot;atualizador&quot; do\n       useState, conforme o botão abaixo, que somará corretamente:\n      </p>\n\n      <code className=\"mb-2\">\n       setCorrectSum((sum) ={\">\"} sum + 1); <br />\n       setCorrectSum((sum) ={\">\"} sum + 1); <br />\n       setCorrectSum((sum) ={\">\"} sum + 1);\n      </code>\n\n      <button className=\"mb-2\" onClick={() => handleSumCorrect()}>\n       Somar 3\n      </button>\n\n      <h4 className=\"caption\">Resultado da soma: {correctSum}</h4>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">useEffect</h2>\n      <p className=\"mb-1\">\n       Graças ao useEffect, assim que você entrou na página o contador abaixo\n       foi iniciado e indica que você permaneceu nessa página por{\" \"}\n       <b>{secondsInThePage}</b> segundos\n      </p>\n     </SimpleCard>\n\n     <SimpleCard>\n      <h2 className=\"second-title\">Hook customizados</h2>\n      <p className=\"mb-1\">\n       Lista de usuários carregada da API JSON Placeholder assim que você entrou\n       nesta página usando um hook customizado criado para abstrair a lógica de\n       busca de dados.\n      </p>\n\n      {loading && <h4>Carregando usuários</h4>}\n      {!loading &&(\n       <ul>\n        {users.map((user) => (\n         <p key={user.id}>{user.name}</p>\n        ))}\n       </ul>\n        )}\n     </SimpleCard>\n    </div>\n   </div>\n  </div>\n );\n}\n\nexport default Hooks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}